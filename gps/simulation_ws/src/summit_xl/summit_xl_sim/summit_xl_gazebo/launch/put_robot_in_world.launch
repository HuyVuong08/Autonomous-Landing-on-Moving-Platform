<?xml version="1.0"?>
<launch>

    <arg name="x" default="0.0" />
    <arg name="y" default="0.0" />
    <arg name="z" default="0.0" />
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="0.0"/>

    <arg name="ros_planar_move_plugin" default="false"/>

  <!-- summit_xl_control launch file -->
  <!--<include file="$(find summit_xl_control)/launch/summit_xl_control.launch" />-->
  <!-- start summit_xl_control nodes -->
    <include file="$(find summit_xl_control)/launch/summit_xl_control.launch">
        <arg name="sim" value="true"/>
        <arg if="$(arg ros_planar_move_plugin)" name="kinematics" value="steel_omni"/>
        <arg name="ros_planar_move_plugin" value="$(arg ros_planar_move_plugin)"/>
        <arg name="launch_robot_localization" value="false"/>
    </include>

  <!-- launch pad -->
  <!--<include file="$(find summit_xl_pad)/launch/summit_xl_pad.launch" />-->

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
         command="$(find xacro)/xacro.py '$(find summit_xl_description)/robots/summit_xl.urdf.xacro'" />

  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model summit_xl -param robot_description"/>

</launch>
