<?xml version="1.0"?>
<launch>

	<arg name="id_robot" default="rbkairos"/>
	<arg name="docking_qr" default="true"/>
	<arg name="docking_laser_reflectors" default="false"/>
	<arg name="config_laser_reflectors_filter" default="$(find summit_xl_navigation)/config/docking/laser_filter_reflectors.yaml"/>
	<arg name="source_topic" default="merge_laser/scan" />
	<arg name="target_topic" default="merge_laser/cloud_reflector" />
	<arg name="distance_between_reflectors" default="0.66" />
	<arg name="distance_marker_and_contact" default="0.325" />


	<arg name="prefix" value="$(arg id_robot)_"/>
	<arg name="marker_size" default="12.0" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />
	<arg name="cam_image_topic" default="front_rgbd_camera/rgb/image_raw" />
	<arg name="cam_info_topic" default="front_rgbd_camera/rgb/camera_info" />
	<arg name="output_frame" default="$(arg prefix)front_rgbd_camera_rgb_optical_frame" />
	<arg name="fixed_frame" default="$(arg prefix)odom"/>
	<arg name="robot_base_frame" default="$(arg prefix)base_footprint"/>
	<arg name="laser_dock_middle_frame" default="$(arg prefix)docking_station_laser"/>
	<arg name="laser_filtered_dock_frame" default="$(arg prefix)filtered_docking_station_laser"/>
	<arg name="laser_filtered_contact_dock_frame" default="$(arg prefix)docking_station_laser_contact"/>

	<group if="$(arg docking_qr)">

		<node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
			<param name="marker_size" type="double" value="$(arg marker_size)"/>
			<param name="max_new_marker_error" type="double" value="$(arg max_new_marker_error)"/>
			<param name="max_track_error" type="double" value="$(arg max_track_error)"/>
			<param name="output_frame" type="string" value="$(arg output_frame)"/>
			<remap from="camera_image" to="$(arg cam_image_topic)"/>
			<remap from="camera_info" to="$(arg cam_info_topic)"/>
		</node>


		<node name="marker2contact" pkg="tf" type="static_transform_publisher" args="-$(arg distance_marker_and_contact) 0.0 0 0 0 0 $(arg prefix)docking_station_marker $(arg prefix)docking_station_contact 100" />

		<node name="tf_robotnik_pose_filter" pkg="robotnik_pose_filter" type="tf_pose_filter_node" respawn="false" output="screen">
			<param name="filter_position_sensitivity" type="double" value="0.3" />
			<param name="filter_orientation_sensitivity" type="double" value="0.1" />
			<param name="source_frame" type="string" value="$(arg prefix)front_rgbd_camera_rgb_optical_frame" />
			<param name="target_frame" type="string" value="ar_marker_1" />
			<!-- should be prefixed with robot tf prefix, 
				but ar_track does not allow to set a prefix... value="$(arg prefix)ar_marker_1" /-->
			<param name="filtered_source_frame" type="string" value="$(arg prefix)odom" />
			<param name="filtered_target_frame" type="string" value="$(arg prefix)docking_station_marker" />
			<param name="two_d_mode" type="bool" value="true" />
			<rosparam param="apply_transform">[0.0, 0.0, 0.0, 0.0, 1.5707, 1.5707]</rosparam>
			<!-- if not set, does not apply a transform. transform is xyz-rpy, 6 parameters. remember that rotation is applied in reverse order (ypr) -->
		</node>


		<node name="qr_docker" pkg="robotnik_docker" type="omni_docker_node" respawn="false" output="screen">
			<param name="robot_base_frame" type="string" value="$(arg prefix)base_footprint" />

			<param name="fixed_frame" type="string" value="$(arg prefix)odom" />

			<param name="gain_linear_velocity_x" value="0.5" />
			<param name="gain_angular_velocity_z" value="2.0" />

			<param name="maximum_linear_velocity_x" value="0.4" />
			<param name="maximum_angular_velocity_z" value="0.7" />

			<param name="threshold_linear_velocity_x" value="0.002" />
			<param name="threshold_linear_velocity_y" value="0.002" />
			<param name="threshold_angular_velocity_z" value="0.05" />

			<param name="initial_maximum_distance_x" value="2.5" />
			<param name="initial_minimum_distance_x" value="0.6" />

			<param name="initial_maximum_arc" value="0.45" />
			<param name="initial_maximum_yaw" value="0.55" />
			<param name="offset_for_heading_adjustment" value="0.75"/>

			<!-- remap from="~cmd_vel" to="cmd_vel" / -->
			<param name="check_robot_is_moving_to_goal" value="false" />
			<param name="robot_moving_to_goal_delay" value="3" />
			<param name="robot_moving_to_goal_averaging_time" value="0.6" />


			<param name="goal_threshold_x" value="0.0125"/>
			<param name="goal_threshold_y" value="0.02"/>
			<param name="goal_threshold_theta" value="0.08"/>

		</node>
	</group>

	<group if="$(arg docking_laser_reflectors)">
		<node pkg="laser_filters" type="scan_to_cloud_filter_chain" name="scan_to_cloud_filter_reflector">
			<rosparam command="load" file="$(arg config_laser_reflectors_filter)"/>
			<param name="high_fidelity" value="true"/>
			<param name="incident_angle_correction" value="false"/>
			<param name="target_frame" value="$(arg robot_base_frame)"/>
			<remap from="scan" to="$(arg source_topic)"/>
			<remap from="cloud_filtered" to="$(arg target_topic)"/>
		</node>

		<node pkg="robotnik_locator" type="two_tag_laser_locator_node" name="two_tag_laser_locator_node">
			<param name="robot_base_frame" value="$(arg robot_base_frame)"/>
			<param name="fixed_frame" value="$(arg fixed_frame)" />
			<param name="object_frame" value="$(arg laser_dock_middle_frame)"/>
			<param name="scan_topic_name" value="$(arg target_topic)" />
			<param name="min_num_cluster" type="int" value="3"/>
			<param name="max_num_cluser" type="int" value="30"/>
			<param name="cluster_tolerance" value="0.1"/>
			<param name="tag_distance" value="$(arg distance_between_reflectors)"/>
			<param name="tag_distance_margin" value="0.2"/>
			<param name="distance_detection" value="3.5"/>
			<param name="desired_freq" value="40.0"/>
			<param name="filter_object_by_orientation" value="false"/>
		</node>
		
        <node name="tf_robotnik_pose_filter_laser" pkg="robotnik_pose_filter" type="tf_pose_filter_node" respawn="false" output="screen">
            <param name="filter_position_sensitivity"       type="double" value="0.8" />
            <param name="filter_orientation_sensitivity"    type="double" value="0.2" />
            <param name="source_frame" type="string" value="$(arg prefix)odom" />
            <param name="target_frame" type="string" value="$(arg laser_dock_middle_frame)" />
            <param name="filtered_source_frame" type="string" value="$(arg prefix)odom" />
            <param name="filtered_target_frame" type="string" value="$(arg laser_dock_middle_frame)_filtered" />
            <param name="two_d_mode" type="bool" value="false" />
            <rosparam param="apply_transform">[0.0, -0.29, 0.0, 0.0, 0.0, 1.571]</rosparam>
            <!-- if not set, does not apply a transform. transform is xyz-rpy, 6 parameters. remember that rotation is applied in reverse order (ypr) -->
        </node>

		<node name="laser_reflectors_docker" pkg="robotnik_docker" type="omni_docker_node" respawn="false" output="screen">
			<param name="robot_base_frame" type="string" value="$(arg robot_base_frame)" />
			<param name="fixed_frame" type="string" value="$(arg fixed_frame)" />

			<param name="omni" type="bool" value="true" />

			<param name="gain_linear_velocity_x" value="1.0" />
			<param name="gain_linear_velocity_y" value="1.0" />
			<param name="gain_angular_velocity_z" value="4.0" />
			
			<param name="maximum_linear_velocity_x" value="0.1" />
			<param name="maximum_linear_velocity_y" value="0.1" />
			<param name="maximum_angular_velocity_z" value="0.35" />
			
			<param name="threshold_linear_velocity_x" value="0.002" />
			<param name="threshold_linear_velocity_y" value="0.002" />
			<param name="threshold_angular_velocity_z" value="0.005" />
			
			 <param name="goal_threshold_x" value="0.005" />
			 <param name="goal_threshold_y" value="0.005" />
			 <param name="goal_threshold_theta" value="0.05" />

			<param name="initial_maximum_distance_x" value="2.5" />
			<!--param name="initial_minimum_distance_x" value="0.1" /-->
			<param name="initial_minimum_distance_x" value="0.0" />

			<!--param name="initial_maximum_arc" value="0.5" /-->
			<param name="initial_maximum_arc" value="3.14" />
			<param name="initial_maximum_yaw" value="2.5" />
			
			<param name="check_robot_is_moving_to_goal" value="false" />
			<param name="robot_moving_to_goal_delay" value="3" />
			<param name="robot_moving_to_goal_averaging_time" value="0.5" />

			<param name="minimum_relative_angular_velocity_between_robot_and_goal" value="0.02"/>

		</node>
	</group>

	<node name="docker" pkg="robotnik_docker" type="omni_docker_node" respawn="false" output="screen">
		<param name="robot_base_frame" type="string" value="robot_base_link" />

		<param name="fixed_frame" type="string" value="robot_odom" />

		<param name="omni" type="bool" value="true" />

		<param name="gain_linear_velocity_x" value="1" />
		<param name="gain_linear_velocity_y" value="1" />
		<param name="gain_angular_velocity_z" value="3.2" />

		<param name="maximum_linear_velocity_x" value="0.1" />
		<param name="maximum_linear_velocity_y" value="0.1" />
		<param name="maximum_angular_velocity_z" value="0.35" />

		<param name="threshold_linear_velocity_x" value="0.002" />
		<param name="threshold_linear_velocity_y" value="0.002" />
		<param name="threshold_angular_velocity_z" value="0.05" />

		<param name="goal_threshold_x" value="0.005" />
		<param name="goal_threshold_y" value="0.005" />
		<param name="goal_threshold_theta" value="0.03" />

		<param name="initial_maximum_distance_x" value="5" />
		<param name="initial_minimum_distance_x" value="0.1" />

		<param name="initial_maximum_arc" value="3.14" />
		<param name="initial_maximum_yaw" value="3.14" />

		<param name="check_robot_is_moving_to_goal" value="false" />
		<param name="free_goal_velocity" value="false" />
		<param name="robot_moving_to_goal_delay" value="1" />
		<param name="robot_moving_to_goal_averaging_time" value="1" />

		<remap from="~cmd_vel" to="cmd_vel" />
	</node>


</launch>
